openapi: 3.0.0
info:
  title: API de Sistema de Facturaci√≥n y Stock
  description: API para gestionar facturas, productos, clientes, proveedores, inventario y reportes.
  version: 1.0.0

servers:
  - url: http://localhost:8080/par2024

paths:
  /facturas:
    get:
      summary: Obtener todas las facturas
      responses:
        '200':
          description: Lista de facturas obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Factura'
    post:
      summary: Crear una nueva factura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factura'
      responses:
        '201':
          description: Factura creada exitosamente

  /facturas/{id}:
    get:
      summary: Obtener una factura por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Factura obtenida correctamente
        '404':
          description: Factura no encontrada
    put:
      summary: Actualizar una factura existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factura'
      responses:
        '200':
          description: Factura actualizada correctamente
    delete:
      summary: Eliminar una factura
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Factura eliminada correctamente

  /productos:
    get:
      summary: Obtener todos los productos en stock
      responses:
        '200':
          description: Lista de productos obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
    post:
      summary: Agregar un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '201':
          description: Producto agregado correctamente

  /productos/{id}:
    get:
      summary: Obtener un producto por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto obtenido correctamente
        '404':
          description: Producto no encontrado
    put:
      summary: Actualizar un producto existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          description: Producto actualizado correctamente
    delete:
      summary: Eliminar un producto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto eliminado correctamente

  /clientes:
    get:
      summary: Obtener todos los clientes registrados
      responses:
        '200':
          description: Lista de clientes obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
    post:
      summary: Crear un nuevo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '201':
          description: Cliente creado correctamente

  /clientes/{id}:
    get:
      summary: Obtener un cliente por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Cliente obtenido correctamente
        '404':
          description: Cliente no encontrado
    put:
      summary: Actualizar datos de un cliente existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '200':
          description: Cliente actualizado correctamente
    delete:
      summary: Eliminar un cliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Cliente eliminado correctamente

  /proveedores:
    get:
      summary: Obtener todos los proveedores registrados
      responses:
        '200':
          description: Lista de proveedores obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proveedor'
    post:
      summary: Crear un nuevo proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proveedor'
      responses:
        '201':
          description: Proveedor creado correctamente

  /proveedores/{id}:
    get:
      summary: Obtener un proveedor por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Proveedor obtenido correctamente
        '404':
          description: Proveedor no encontrado
    put:
      summary: Actualizar datos de un proveedor existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proveedor'
      responses:
        '200':
          description: Proveedor actualizado correctamente
    delete:
      summary: Eliminar un proveedor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Proveedor eliminado correctamente
